
name: Foodgram final workflow

on:
  push:
    branches:
      - main

jobs:
  # tests:
  #   name: pip install, flake8 tests
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:13.10
  #       env:
  #         POSTGRES_USER: django_user
  #         POSTGRES_PASSWORD: django_password
  #         POSTGRES_DB: django_db
  #       ports:
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.9
  #     - name: Install dependencies
  #       run: |
  #         pip install -r requirements.txt 
  #         cd frontend/
  #         npm install
  #         python -m pip install --upgrade pip 
  #         pip install flake8==6.0.0 flake8-isort==6.0.0
  #     - name: Test with flake8
  #       run: python -m flake8 backend/

  # build_and_push_backend:
  #   name: Push Backend Docker Image
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Build and push backend image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./backend/foodgram/
  #         push: true
  #         tags: vitsman/foodgram_back:latest

  # build_and_push_frontend:
  #   name: Push Frontend Docker Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Build and push frontend image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./frontend/
  #         push: true
  #         tags: vitsman/foodgram-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: 
    #   - build_and_push_frontend
    #   - build_and_push_backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Copy docker-compose.production.yml via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/docker-compose.production.yml"
          target: "~/foodgram/"
      - name: Copy nginx.conf via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/nginx.conf"
          target: "~/foodgram/"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ~/foodgram
            sudo docker compose -f infra/docker-compose.production.yml down
            sudo docker compose -f infra/docker-compose.production.yml pull
            sudo docker compose -f infra/docker-compose.production.yml up -d
            sudo docker compose -f infra/docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f infra/docker-compose.production.yml exec backend python manage.py collectstatic --noinput
            sudo docker cp infra-backend-1:/app/staticfiles/. ./backend_static/
            sudo systemctl restart nginx
